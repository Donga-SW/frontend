"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/graph/page",{

/***/ "(app-pages-browser)/./components/graph.tsx":
/*!******************************!*\
  !*** ./components/graph.tsx ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GraphComponent)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(app-pages-browser)/./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _barrel_optimize_names_ChevronDown_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=ChevronDown!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/chevron-down.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nfunction GraphComponent(param) {\n    let { onSelectNode, selectedFile, searchInputRef, setSearchActive, dropdownOpen, setDropdownOpen } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const datalistRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const setSearchQueryRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)({\n        \"GraphComponent.useRef[setSearchQueryRef]\": ()=>{}\n    }[\"GraphComponent.useRef[setSearchQueryRef]\"]);\n    const [graphData, setGraphData] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({\n        searchQuery: \"\"\n    });\n    // 최신 state를 항상 참조할 수 있도록 useRef 사용\n    const stateRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(state);\n    stateRef.current = state;\n    // 데이터 fetch\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"GraphComponent.useEffect\": ()=>{\n            fetch(\"/data/\".concat(selectedFile)).then({\n                \"GraphComponent.useEffect\": (res)=>res.json()\n            }[\"GraphComponent.useEffect\"]).then({\n                \"GraphComponent.useEffect\": (json)=>setGraphData(json)\n            }[\"GraphComponent.useEffect\"]);\n        }\n    }[\"GraphComponent.useEffect\"], [\n        selectedFile\n    ]);\n    // sigma/graphology 및 예제 로직 적용\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"GraphComponent.useEffect\": ()=>{\n            if (!graphData || !containerRef.current) return;\n            let renderer;\n            let graph;\n            Promise.all([\n                __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_graphology_dist_graphology_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! graphology */ \"(app-pages-browser)/./node_modules/graphology/dist/graphology.mjs\")),\n                __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_sigma_dist_sigma_esm_js\").then(__webpack_require__.bind(__webpack_require__, /*! sigma */ \"(app-pages-browser)/./node_modules/sigma/dist/sigma.esm.js\"))\n            ]).then({\n                \"GraphComponent.useEffect\": (param)=>{\n                    let [{ default: Graph }, { default: Sigma }] = param;\n                    var _containerRef_current;\n                    //모든 노드를 노드화\n                    const nodesWithXY = graphData.nodes.map({\n                        \"GraphComponent.useEffect.nodesWithXY\": (node, idx)=>{\n                            var _node_attributes, _node_attributes1;\n                            let x = typeof ((_node_attributes = node.attributes) === null || _node_attributes === void 0 ? void 0 : _node_attributes.x) === \"number\" ? node.attributes.x : typeof node.x === \"number\" ? node.x : Math.cos(idx) * 10;\n                            let y = typeof ((_node_attributes1 = node.attributes) === null || _node_attributes1 === void 0 ? void 0 : _node_attributes1.y) === \"number\" ? node.attributes.y : typeof node.y === \"number\" ? node.y : Math.sin(idx) * 10;\n                            if (typeof x !== \"number\" || isNaN(x)) x = 0;\n                            if (typeof y !== \"number\" || isNaN(y)) y = 0;\n                            var _node_attributes2;\n                            const { type, label, size, ...restAttrs } = (_node_attributes2 = node.attributes) !== null && _node_attributes2 !== void 0 ? _node_attributes2 : node;\n                            var _ref, _ref1, _ref2;\n                            return {\n                                ...node,\n                                attributes: {\n                                    ...restAttrs,\n                                    x,\n                                    y,\n                                    label: (_ref2 = (_ref1 = (_ref = label !== null && label !== void 0 ? label : node.label) !== null && _ref !== void 0 ? _ref : node.id) !== null && _ref1 !== void 0 ? _ref1 : node.key) !== null && _ref2 !== void 0 ? _ref2 : String(idx),\n                                    size: typeof size === \"number\" && size > 0 ? size : 10\n                                }\n                            };\n                        }\n                    }[\"GraphComponent.useEffect.nodesWithXY\"]);\n                    graph = new Graph();\n                    nodesWithXY.forEach({\n                        \"GraphComponent.useEffect\": (node)=>{\n                            var _node_key, _node_attributes;\n                            graph.addNode((_node_key = node.key) !== null && _node_key !== void 0 ? _node_key : node.id, (_node_attributes = node.attributes) !== null && _node_attributes !== void 0 ? _node_attributes : node);\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    const nodeIds = new Set(nodesWithXY.map({\n                        \"GraphComponent.useEffect\": (node)=>{\n                            var _node_key;\n                            return (_node_key = node.key) !== null && _node_key !== void 0 ? _node_key : node.id;\n                        }\n                    }[\"GraphComponent.useEffect\"]));\n                    if (graphData.edges) {\n                        graphData.edges.forEach({\n                            \"GraphComponent.useEffect\": (edge)=>{\n                                const source = edge.source;\n                                const target = edge.target;\n                                if (nodeIds.has(source) && nodeIds.has(target)) {\n                                    var _edge_attributes;\n                                    graph.addEdge(source, target, (_edge_attributes = edge.attributes) !== null && _edge_attributes !== void 0 ? _edge_attributes : edge);\n                                }\n                            }\n                        }[\"GraphComponent.useEffect\"]);\n                    }\n                    renderer = new Sigma(graph, containerRef.current, {\n                        enableEdgeEvents: true,\n                        renderLabels: true,\n                        labelRenderedSizeThreshold: 0\n                    });\n                    renderer.refresh();\n                    renderer.refresh();\n                    // 캔버스에 pointer-events 강제 적용\n                    const canvases = (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.querySelectorAll(\"canvas\");\n                    canvases === null || canvases === void 0 ? void 0 : canvases.forEach({\n                        \"GraphComponent.useEffect\": (c)=>{\n                            c.style.pointerEvents = \"auto\";\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    if (datalistRef.current) {\n                        datalistRef.current.innerHTML = graph.nodes().map({\n                            \"GraphComponent.useEffect\": (node)=>{\n                                var _graph_getNodeAttribute;\n                                return '<option value=\"'.concat((_graph_getNodeAttribute = graph.getNodeAttribute(node, \"label\")) !== null && _graph_getNodeAttribute !== void 0 ? _graph_getNodeAttribute : node, '\"></option>');\n                            }\n                        }[\"GraphComponent.useEffect\"]).join(\"\\n\");\n                    }\n                    // 최신 stateRef를 참조하는 reducer/이벤트\n                    function setHoveredNode(node) {\n                        if (node) {\n                            setState({\n                                \"GraphComponent.useEffect.setHoveredNode\": (prev)=>{\n                                    const next = {\n                                        ...prev,\n                                        hoveredNode: node,\n                                        hoveredNeighbors: new Set(graph.neighbors(node))\n                                    };\n                                    stateRef.current = next;\n                                    return next;\n                                }\n                            }[\"GraphComponent.useEffect.setHoveredNode\"]);\n                        } else {\n                            setState({\n                                \"GraphComponent.useEffect.setHoveredNode\": (prev)=>{\n                                    const next = {\n                                        ...prev,\n                                        hoveredNode: undefined,\n                                        hoveredNeighbors: undefined\n                                    };\n                                    stateRef.current = next;\n                                    return next;\n                                }\n                            }[\"GraphComponent.useEffect.setHoveredNode\"]);\n                        }\n                        renderer.refresh({\n                            skipIndexation: true\n                        });\n                    }\n                    function setSelectedNode(node) {\n                        if (onSelectNode) onSelectNode(node);\n                        if (node) {\n                            setState({\n                                \"GraphComponent.useEffect.setSelectedNode\": (prev)=>{\n                                    const next = {\n                                        ...prev,\n                                        selectedNode: node,\n                                        selectedNeighbors: new Set(graph.neighbors(node))\n                                    };\n                                    stateRef.current = next;\n                                    return next;\n                                }\n                            }[\"GraphComponent.useEffect.setSelectedNode\"]);\n                        } else {\n                            setState({\n                                \"GraphComponent.useEffect.setSelectedNode\": (prev)=>{\n                                    const next = {\n                                        ...prev,\n                                        selectedNode: undefined,\n                                        selectedNeighbors: undefined\n                                    };\n                                    stateRef.current = next;\n                                    return next;\n                                }\n                            }[\"GraphComponent.useEffect.setSelectedNode\"]);\n                        }\n                        renderer.refresh({\n                            skipIndexation: true\n                        });\n                    }\n                    // 이벤트 바인딩\n                    if (inputRef.current) {\n                        inputRef.current.oninput = ({\n                            \"GraphComponent.useEffect\": ()=>setSearchQuery(inputRef.current.value || \"\")\n                        })[\"GraphComponent.useEffect\"];\n                    }\n                    renderer.on(\"enterNode\", {\n                        \"GraphComponent.useEffect\": (param)=>{\n                            let { node } = param;\n                            console.log(\"enterNode\", node);\n                            setHoveredNode(node);\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    renderer.on(\"leaveNode\", {\n                        \"GraphComponent.useEffect\": ()=>{\n                            console.log(\"leaveNode\");\n                            setHoveredNode(undefined);\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    // 노드 클릭 시 검색창에 자동 입력\n                    renderer.on(\"downNode\", {\n                        \"GraphComponent.useEffect\": (param)=>{\n                            let { node } = param;\n                            var _graph_getNodeAttribute;\n                            const label = (_graph_getNodeAttribute = graph.getNodeAttribute(node, \"label\")) !== null && _graph_getNodeAttribute !== void 0 ? _graph_getNodeAttribute : node;\n                            setSearchQuery(label);\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    // 검색창에서 해당 노드를 검색하면 그 노드와 이웃만 남기고 블러 처리\n                    renderer.setSetting(\"nodeReducer\", {\n                        \"GraphComponent.useEffect\": (node, data)=>{\n                            const s = stateRef.current;\n                            const res = {\n                                ...data\n                            };\n                            // 검색창에서 노드가 선택된 경우(selectedNode), 해당 노드와 이웃만 정상 표시, 나머지는 블러\n                            if (s.selectedNode && s.selectedNode.length > 0 && s.hoveredNeighbors) {\n                                if (node !== s.selectedNode && !s.hoveredNeighbors.has(node)) {\n                                    res.label = \"\";\n                                    res.color = \"#f6f6f6\";\n                                }\n                            } else if (s.suggestions && !s.suggestions.has(node)) {\n                                // 검색창 입력 중에는 suggestions에 없는 노드만 블러\n                                res.label = \"\";\n                                res.color = \"#f6f6f6\";\n                            }\n                            if (s.selectedNode === node) {\n                                res.highlighted = true;\n                            } else if (s.suggestions && s.suggestions.has(node)) {\n                                res.forceLabel = true;\n                            }\n                            return res;\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    renderer.setSetting(\"edgeReducer\", {\n                        \"GraphComponent.useEffect\": (edge, data)=>{\n                            const s = stateRef.current;\n                            const res = {\n                                ...data\n                            };\n                            // 검색창에서 노드가 선택된 경우(selectedNode), 해당 노드와 연결된 엣지만 표시, 나머지는 숨김\n                            if (s.selectedNode && s.selectedNode.length > 0 && s.hoveredNeighbors) {\n                                const [source, target] = [\n                                    graph.source(edge),\n                                    graph.target(edge)\n                                ];\n                                if (source !== s.selectedNode && target !== s.selectedNode && !s.hoveredNeighbors.has(source) && !s.hoveredNeighbors.has(target)) {\n                                    res.hidden = true;\n                                }\n                            } else if (s.suggestions && (!s.suggestions.has(graph.source(edge)) || !s.suggestions.has(graph.target(edge)))) {\n                                res.hidden = true;\n                            }\n                            return res;\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    // setSearchQuery를 외부에서 안전하게 참조할 수 있도록 useRef에 미리 할당\n                    function setSearchQuery(query) {\n                        setState({\n                            \"GraphComponent.useEffect.setSearchQuery\": (prev)=>{\n                                const next = {\n                                    ...prev,\n                                    searchQuery: query\n                                };\n                                stateRef.current = next;\n                                return next;\n                            }\n                        }[\"GraphComponent.useEffect.setSearchQuery\"]);\n                        if (inputRef.current && inputRef.current.value !== query) inputRef.current.value = query;\n                        if (query) {\n                            const lcQuery = query.toLowerCase();\n                            const suggestionsArr = graph.nodes().map({\n                                \"GraphComponent.useEffect.setSearchQuery.suggestionsArr\": (n)=>{\n                                    const label = graph.getNodeAttribute(n, \"label\");\n                                    return {\n                                        id: n,\n                                        label: typeof label === \"string\" ? label : \"\"\n                                    };\n                                }\n                            }[\"GraphComponent.useEffect.setSearchQuery.suggestionsArr\"]).filter({\n                                \"GraphComponent.useEffect.setSearchQuery.suggestionsArr\": (param)=>{\n                                    let { label } = param;\n                                    return label.toLowerCase().includes(lcQuery);\n                                }\n                            }[\"GraphComponent.useEffect.setSearchQuery.suggestionsArr\"]);\n                            if (suggestionsArr.length === 1 && suggestionsArr[0].label === query) {\n                                setSelectedNode(suggestionsArr[0].id);\n                                // 카메라 이동 (검색에서만)\n                                const nodePosition = renderer.getNodeDisplayData(suggestionsArr[0].id);\n                                if (nodePosition) renderer.getCamera().animate(nodePosition, {\n                                    duration: 500\n                                });\n                            } else {\n                                setSelectedNode(undefined);\n                                setState({\n                                    \"GraphComponent.useEffect.setSearchQuery\": (prev)=>{\n                                        const next = {\n                                            ...prev,\n                                            suggestions: new Set(suggestionsArr.map({\n                                                \"GraphComponent.useEffect.setSearchQuery\": (param)=>{\n                                                    let { id } = param;\n                                                    return id;\n                                                }\n                                            }[\"GraphComponent.useEffect.setSearchQuery\"]))\n                                        };\n                                        stateRef.current = next;\n                                        return next;\n                                    }\n                                }[\"GraphComponent.useEffect.setSearchQuery\"]);\n                            }\n                        } else {\n                            setSelectedNode(undefined);\n                            setState({\n                                \"GraphComponent.useEffect.setSearchQuery\": (prev)=>{\n                                    const next = {\n                                        ...prev,\n                                        suggestions: undefined\n                                    };\n                                    stateRef.current = next;\n                                    return next;\n                                }\n                            }[\"GraphComponent.useEffect.setSearchQuery\"]);\n                        }\n                        renderer.refresh({\n                            skipIndexation: true\n                        });\n                    }\n                    setSearchQueryRef.current = setSearchQuery; // useEffect 내부에서는 할당만\n                    // 기존 setSearchQuery를 덮어씀\n                    // 이벤트 바인딩도 새 setSearchQuery로 연결\n                    if (inputRef.current) {\n                        inputRef.current.oninput = ({\n                            \"GraphComponent.useEffect\": ()=>setSearchQuery(inputRef.current.value || \"\")\n                        })[\"GraphComponent.useEffect\"];\n                    }\n                    renderer.on(\"enterNode\", {\n                        \"GraphComponent.useEffect\": (param)=>{\n                            let { node } = param;\n                            return setHoveredNode(node);\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    renderer.on(\"leaveNode\", {\n                        \"GraphComponent.useEffect\": ()=>setHoveredNode(undefined)\n                    }[\"GraphComponent.useEffect\"]);\n                    renderer.setSetting(\"nodeReducer\", {\n                        \"GraphComponent.useEffect\": (node, data)=>{\n                            const s = stateRef.current;\n                            const res = {\n                                ...data\n                            };\n                            // 1. hoveredNode가 있으면 hover만 적용 (selectedNode 무시)\n                            if (s.hoveredNode && s.hoveredNeighbors) {\n                                if (node !== s.hoveredNode && !s.hoveredNeighbors.has(node)) {\n                                    res.label = \"\";\n                                    res.color = \"#f6f6f6\";\n                                }\n                                return res;\n                            }\n                            // 2. hoveredNode가 없을 때만 selectedNode 적용\n                            if (s.selectedNode && s.selectedNeighbors) {\n                                if (node !== s.selectedNode && !s.selectedNeighbors.has(node)) {\n                                    res.label = \"\";\n                                    res.color = \"#f6f6f6\";\n                                }\n                                if (s.selectedNode === node) res.highlighted = true;\n                                return res;\n                            }\n                            // 3. 검색창 입력 중 suggestions\n                            if (s.suggestions && !s.suggestions.has(node)) {\n                                res.label = \"\";\n                                res.color = \"#f6f6f6\";\n                            }\n                            if (s.suggestions && s.suggestions.has(node)) {\n                                res.forceLabel = true;\n                            }\n                            return res;\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    renderer.setSetting(\"edgeReducer\", {\n                        \"GraphComponent.useEffect\": (edge, data)=>{\n                            const s = stateRef.current;\n                            const res = {\n                                ...data\n                            };\n                            // 1. hoveredNode가 있으면 hover만 적용 (selectedNode 무시)\n                            if (s.hoveredNode && s.hoveredNeighbors) {\n                                const [source, target] = [\n                                    graph.source(edge),\n                                    graph.target(edge)\n                                ];\n                                if (source !== s.hoveredNode && target !== s.hoveredNode && !s.hoveredNeighbors.has(source) && !s.hoveredNeighbors.has(target)) {\n                                    res.hidden = true;\n                                }\n                                return res;\n                            }\n                            // 2. hoveredNode가 없을 때만 selectedNode 적용\n                            if (s.selectedNode && s.selectedNeighbors) {\n                                const [source, target] = [\n                                    graph.source(edge),\n                                    graph.target(edge)\n                                ];\n                                if (source !== s.selectedNode && target !== s.selectedNode && !s.selectedNeighbors.has(source) && !s.selectedNeighbors.has(target)) {\n                                    res.hidden = true;\n                                }\n                                return res;\n                            }\n                            // 3. 검색창 입력 중 suggestions\n                            if (s.suggestions && (!s.suggestions.has(graph.source(edge)) || !s.suggestions.has(graph.target(edge)))) {\n                                res.hidden = true;\n                            }\n                            return res;\n                        }\n                    }[\"GraphComponent.useEffect\"]);\n                    // cleanup\n                    return ({\n                        \"GraphComponent.useEffect\": ()=>{\n                            renderer.kill();\n                        }\n                    })[\"GraphComponent.useEffect\"];\n                }\n            }[\"GraphComponent.useEffect\"]);\n            return ({\n                \"GraphComponent.useEffect\": ()=>{\n                    if (renderer) renderer.kill();\n                }\n            })[\"GraphComponent.useEffect\"];\n        }\n    }[\"GraphComponent.useEffect\"], [\n        graphData\n    ]);\n    // inputRef를 외부에서 제어할 수 있게 연결\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"GraphComponent.useEffect\": ()=>{\n            if (searchInputRef && searchInputRef.current !== inputRef.current) {\n                // 외부에서 ref를 전달받으면 내부 inputRef와 동기화\n                searchInputRef.current = inputRef.current;\n            }\n        }\n    }[\"GraphComponent.useEffect\"], [\n        searchInputRef\n    ]);\n    // 검색창 포커스/블러/X버튼 처리\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"GraphComponent.useEffect\": ()=>{\n            if (!setSearchActive) return;\n            const input = inputRef.current;\n            if (!input) return;\n            const handleFocus = {\n                \"GraphComponent.useEffect.handleFocus\": ()=>setSearchActive(true)\n            }[\"GraphComponent.useEffect.handleFocus\"];\n            // blur에서는 더 이상 setSearchActive(false) 호출하지 않음\n            input.addEventListener('focus', handleFocus);\n            return ({\n                \"GraphComponent.useEffect\": ()=>{\n                    input.removeEventListener('focus', handleFocus);\n                }\n            })[\"GraphComponent.useEffect\"];\n        }\n    }[\"GraphComponent.useEffect\"], [\n        setSearchActive\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jsx-aa4da481ea803b87\" + \" \" + \"flex flex-col w-full h-full min-h-screen bg-black\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-aa4da481ea803b87\" + \" \" + \"flex items-center gap-2 p-4 justify-end\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"jsx-aa4da481ea803b87\" + \" \" + \"relative w-64\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            ref: inputRef,\n                            id: \"search-input\",\n                            placeholder: \"노드 이름 검색\",\n                            list: \"suggestions\",\n                            value: state.searchQuery,\n                            onChange: (e)=>setSearchQueryRef.current(e.target.value),\n                            onFocus: ()=>{\n                                setDropdownOpen && setDropdownOpen(true);\n                                setSearchActive && setSearchActive(true);\n                            },\n                            onBlur: ()=>{\n                                setDropdownOpen && setDropdownOpen(false);\n                            },\n                            className: \"jsx-aa4da481ea803b87\" + \" \" + \"border rounded px-3 py-2 w-full pr-8 bg-neutral-900 text-white placeholder-gray-300 focus:bg-neutral-800 focus:border-blue-400 transition-colors duration-150\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                            lineNumber: 359,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"jsx-aa4da481ea803b87\" + \" \" + \"absolute right-8 top-1/2 -translate-y-1/2 cursor-pointer select-none\",\n                            children: dropdownOpen ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ChevronDown_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                style: {\n                                    transform: 'rotate(180deg)'\n                                },\n                                className: \"w-4 h-4 text-white transition-transform\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                                lineNumber: 378,\n                                columnNumber: 15\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ChevronDown_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                className: \"w-4 h-4 text-white transition-transform\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                                lineNumber: 380,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                            lineNumber: 376,\n                            columnNumber: 11\n                        }, this),\n                        state.searchQuery && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            type: \"button\",\n                            \"aria-label\": \"검색어 지우기\",\n                            onClick: ()=>{\n                                setSearchQueryRef.current(\"\");\n                                if (setSearchActive) setSearchActive(false);\n                            },\n                            style: {\n                                padding: 0,\n                                background: 'none',\n                                border: 'none'\n                            },\n                            className: \"jsx-aa4da481ea803b87\" + \" \" + \"absolute right-2 top-1/2 -translate-y-1/2 text-white hover:text-gray-200\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                src: \"/images/icon-x.svg\",\n                                alt: \"지우기\",\n                                width: 20,\n                                height: 20\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                                lineNumber: 394,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                            lineNumber: 384,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"datalist\", {\n                            id: \"suggestions\",\n                            ref: datalistRef,\n                            className: \"jsx-aa4da481ea803b87\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                            lineNumber: 397,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                    lineNumber: 358,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                lineNumber: 357,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-aa4da481ea803b87\" + \" \" + \"flex-1 w-full h-[calc(100vh-5rem)] min-h-[500px]\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"jsx-aa4da481ea803b87\" + \" \" + \"relative w-full h-full min-h-[500px]\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: containerRef,\n                        className: \"jsx-aa4da481ea803b87\" + \" \" + \"absolute inset-0 z-0 w-full h-full min-h-[500px] pointer-events-auto\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                        lineNumber: 402,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                    lineNumber: 401,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n                lineNumber: 400,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"aa4da481ea803b87\",\n                children: \"input[list]::-webkit-calendar-picker-indicator{opacity:0;display:none}input[list]::-webkit-input-placeholder{color:inherit}input[list]::-ms-expand{display:none}input[list]{-ms-appearance:none;appearance:none;-webkit-appearance:none;-moz-appearance:none;background:none}\"\n            }, void 0, false, void 0, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\hyeon\\\\Desktop\\\\frontend-hiddennode\\\\components\\\\graph.tsx\",\n        lineNumber: 356,\n        columnNumber: 5\n    }, this);\n}\n_s(GraphComponent, \"B3NqQfC+ap0xn1wWA7vSR/TnhcA=\");\n_c = GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/graph.tsx\n"));

/***/ })

});